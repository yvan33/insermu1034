<?php   /** * A unique identifier is defined to store the options in the database and reference them from the theme. * By default it uses the theme name, in lowercase and without spaces, but this can be changed if needed. * If the identifier changes, it'll appear as if the options have been reset. *  */function evolve_option_name() {	// This gets the theme name from the stylesheet (lowercase and without spaces)	$themename = wp_get_theme();	$themename = $themename['Name'];	$themename = preg_replace("/\W/", "", strtolower($themename) );		$evolve_settings = get_option('evolve');	$evolve_settings['id'] = 'evolve-theme';	update_option('evolve', $evolve_settings);	}/** * Defines an array of options that will be used to generate the settings page and be saved in the database. * When creating the "id" fields, make sure to use all lowercase and no spaces. *   */function evolve_options() {	// Pull all the categories into an array	$options_categories = array();  	$options_categories_obj = get_categories();	foreach ($options_categories_obj as $category) {    	$options_categories[$category->cat_ID] = $category->cat_name;	}		// Pull all the pages into an array	$options_pages = array();  	$options_pages_obj = get_pages('sort_column=post_parent,menu_order');	$options_pages[''] = 'Select a page:';	foreach ($options_pages_obj as $page) {    	$options_pages[$page->ID] = $page->post_title;	}		// If using image radio buttons, define a directory path  $imagepath = get_template_directory_uri() . '/library/functions/images/';  $imagepathfolder = get_template_directory_uri() . '/library/media/images/';  $evlshortname = "evl";  $template_url = get_template_directory_uri();			$options = array();    // Layout	$options[] = array( "name" => $evlshortname."-tab-1", "id" => $evlshortname."-tab-1",	"type" => "open-tab"); 		$options[] = array(		"name" => __( 'Select a layout', 'evolve'  ),		"desc" => __( 'Select main content and sidebar alignment.', 'evolve'  ),		"id" => $evlshortname."_layout",		"std" => "2cl",		"type" => "images",		"options" => array(			'1c' => $imagepath . '1c.png',			'2cl' => $imagepath . '2cl.png',			'2cr' => $imagepath . '2cr.png',			'3cm' => $imagepath . '3cm.png',			'3cr' => $imagepath . '3cr.png',      '3cl' => $imagepath . '3cl.png'			)		);     $options[] = array(		"name" => __( 'Layout Style', 'evolve'  ),		"desc" => __( '<strong>Boxed version</strong> automatically enables custom background', 'evolve'  ),		"id" => $evlshortname."_width_layout",		"std" => "fixed",		"type" => "select",		"options" => array(			'fixed' => __( 'Boxed &nbsp;&nbsp;&nbsp;(default)', 'evolve'  ),			'fluid' => __( 'Wide', 'evolve'  )			)		);      $options[] = array(		"name" => __( 'Layout Width', 'evolve'  ),		"desc" => __( 'Select the width for your website', 'evolve'  ),		"id" => $evlshortname."_width_px",		"std" => "1200",		"type" => "select",		"options" => array(      '800' => __( '800px', 'evolve'  ),			'985' => __( '985px', 'evolve'  ),			'1200' => __( '1200px &nbsp;&nbsp;&nbsp;(default)', 'evolve'  ),      '1600' => __( '1600px', 'evolve'  )			)		);                $options[] = array( "name" => $evlshortname."-tab-1", "id" => $evlshortname."-tab-1",	"type" => "close-tab" );          // Posts$options[] = array( "name" => $evlshortname."-tab-2", "id" => $evlshortname."-tab-2",	"type" => "open-tab");  $options[] = array(  "name" => __( 'Blog layout', 'evolve'  ),        "desc" => __( 'Grid layout with <strong>3</strong> posts per row is recommended to use with disabled <strong>Sidebar(s)</strong>', 'evolve'  ),        "id" => $evlshortname."_post_layout",        "type" => "images",        "std" => "two",	      "options" => array(			   'one' => $imagepath . 'one-post.png',			   'two' => $imagepath . 'two-posts.png',         'three' => $imagepath . 'three-posts.png',		   	));        $options[] = array(  "name" => __( 'Enable post excerpts', 'evolve'  ),        "desc" => __( 'Check this box if you want to display post excerpts on one column blog layout', 'evolve'  ),        "id" => $evlshortname."_excerpt_thumbnail",        "type" => "checkbox",        "std" => "0");             $options[] = array(  "name" => __( 'Enable featured images', 'evolve'  ),        "desc" => __( 'Check this box if you want to display featured images', 'evolve'  ),        "id" => $evlshortname."_featured_images",        "type" => "checkbox",        "std" => "1");                $options[] = array(  "name" => __( 'Enable post author avatar', 'evolve'  ),        "desc" => __( 'Check this box if you want to display post author avatar', 'evolve'  ),        "id" => $evlshortname."_author_avatar",        "type" => "checkbox",        "std" => "0");          $options[] = array(  "name" => __( 'Post meta header placement', 'evolve'  ),        "desc" => __( 'Choose placement of the post meta header - Date, Author, Comments', 'evolve'  ),        "id" => $evlshortname."_header_meta",        "type" => "select",        "std" => "single_archive",        "options" => array(			   'single_archive' => __( 'Single posts + Archive pages &nbsp;&nbsp;&nbsp;(default)', 'evolve'  ),			   'single' => __( 'Single posts', 'evolve'  ),         'disable' => __( 'Disable', 'evolve'  )		   	));          $options[] = array(  "name" => __( '\'Share This\' buttons placement', 'evolve'  ),        "desc" => __( 'Choose placement of the \'Share This\' buttons', 'evolve'  ),        "id" => $evlshortname."_share_this",        "type" => "select",        "std" => "single",        "options" => array(			   'single' => __( 'Single posts &nbsp;&nbsp;&nbsp;(default)', 'evolve'  ),			   'single_archive' => __( 'Single posts + Archive pages', 'evolve'  ),         'all' => __( 'All pages', 'evolve'  ),         'disable' => __( 'Disable', 'evolve'  )		   	));           $options[] = array(  "name" => __( 'Position of previous/next posts links', 'evolve'  ),        "desc" => __( 'Choose the position of the <strong>Previous/Next Post</strong> links', 'evolve'  ),        "id" => $evlshortname."_post_links",        "type" => "select",        "std" => "after",        "options" => array(			  'after' => __( 'After posts &nbsp;&nbsp;&nbsp;(default)', 'evolve'  ),			  'before' => __( 'Before posts', 'evolve'  ),        'both' => __( 'Both', 'evolve'  )        ));         $options[] = array(  "name" => __( 'Display Similar posts', 'evolve'  ),        "desc" => __( 'Choose if you want to display <strong>Similar posts</strong> in articles', 'evolve'  ),        "id" => $evlshortname."_similar_posts",        "type" => "select",        "std" => "disable",        "options" => array(			  'disable' => __( 'Disable &nbsp;&nbsp;&nbsp;(default)', 'evolve'  ),			  'category' => __( 'Match by categories', 'evolve'  ),        'tag' => __( 'Match by tags', 'evolve'  )        ));                               $options[] = array( "name" => $evlshortname."-tab-2", "id" => $evlshortname."-tab-2",	"type" => "close-tab" );   // Subscribe buttons$options[] = array( "name" => $evlshortname."-tab-3", "id" => $evlshortname."-tab-3",	"type" => "open-tab");    $options[] = array(  "name" => __( 'Enable Subscribe/Social links in header', 'evolve'  ),        "desc" => __( 'Check this box if you want to display Subscribe/Social links in header', 'evolve'  ),        "id" => $evlshortname."_social_links",        "type" => "checkbox",        "std" => "1");      $options[] = array(   "name" => __( 'Subscribe/Social icons color', 'evolve'  ),        "desc" => __( 'Choose the color scheme of subscribe/social icons', 'evolve'  ),        "id" => $evlshortname."_social_color_scheme",        "type" => "color",        "std" => "#999999"        );          $options[] = array(  "name" => __( 'Subscribe/Social icons size', 'evolve'  ),        "desc" => __( 'Choose the size of subscribe/social icons', 'evolve'  ),        "id" => $evlshortname."_social_icons_size",        "type" => "select",        "std" => "normal",        "options" => array(			  'normal' => __( 'Normal &nbsp;&nbsp;&nbsp;(default)', 'evolve'  ),			  'small' => __( 'Small', 'evolve'  ),        'large' => __( 'Large', 'evolve'  ),        'x-large' => __( 'X-Large', 'evolve'  )                 ));                        // RSS Feed  $options[] = array(  "name" => __( 'RSS Feed', 'evolve'  ),        "desc" => __( 'Insert custom RSS Feed URL, e.g. <strong>http://feeds.feedburner.com/Example</strong>', 'evolve'  ),        "id" => $evlshortname."_rss_feed",        "type" => "text",        "std" => ""); // Newsletter$options[] = array(  "name" => __( 'Newsletter', 'evolve'  ),        "desc" => __( 'Insert custom newsletter URL, e.g. <strong>http://feedburner.google.com/fb/a/mailverify?uri=Example&amp;loc=en_US</strong>', 'evolve'  ),        "id" => $evlshortname."_newsletter",        "type" => "text",        "std" => "");  // Facebook$options[] = array(  "name" => __( 'Facebook', 'evolve'  ),        "desc" => __( 'Insert your Facebook ID. If your Facebook page is <strong>http://facebook.com/Example</strong>, insert only <strong>Example</strong>', 'evolve'  ),        "id" => $evlshortname."_facebook",        "type" => "text",        "std" => "");  // Twitter $options[] =  array(  "name" => __( 'Twitter', 'evolve'  ),        "desc" => __( 'Insert your Twitter ID. If your Twitter page is <strong>http://twitter.com/username</strong>, insert only <strong>username</strong>', 'evolve'  ),        "id" => $evlshortname."_twitter_id",        "type" => "text",        "std" => "");  // Instagram$options[] = array(  "name" => __( 'Instagram', 'evolve'  ),        "desc" => __( 'Insert your Instagram URL.', 'evolve'  ),        "id" => $evlshortname."_instagram",        "type" => "text",        "std" => "");  // Skype$options[] = array(  "name" => __( 'Skype', 'evolve'  ),        "desc" => __( 'Insert your Skype ID, e.g. <strong>username</strong>', 'evolve'  ),        "id" => $evlshortname."_skype",        "type" => "text",        "std" => "");  // YouTube$options[] = array(  "name" => __( 'YouTube', 'evolve'  ),        "desc" => __( 'Insert your YouTube ID. If your YouTube page is <strong><strong>http://youtube.com/user/Username</strong></strong>, insert only <strong>Username</strong>', 'evolve'  ),        "id" => $evlshortname."_youtube",        "type" => "text",        "std" => "");  // Flickr$options[] = array(  "name" => __( 'Flickr', 'evolve'  ),        "desc" => __( 'Insert your Flickr ID. If your Flickr page is <strong>http://flickr.com/photos/example</strong>, insert only <strong>example</strong>', 'evolve'  ),        "id" => $evlshortname."_flickr",        "type" => "text",        "std" => "");  // LinkedIn$options[] = array(  "name" => __( 'LinkedIn', 'evolve'  ),        "desc" => __( 'Insert your LinkedIn profile URI, e.g. <strong>http://ca.linkedin.com/pub/your-name/3/859/23b</strong>', 'evolve'  ),        "id" => $evlshortname."_linkedin",        "type" => "text",        "std" => "");        // Google Plus$options[] = array(  "name" => __( 'Google Plus', 'evolve'  ),        "desc" => __( 'Insert your Google Plus profile ID, e.g. <strong>114573636521805298702</strong>', 'evolve'  ),        "id" => $evlshortname."_googleplus",        "type" => "text",        "std" => "");  $options[] = array( "name" => $evlshortname."-tab-3", "id" => $evlshortname."-tab-3",	"type" => "close-tab" );  // Header content$options[] = array( "name" => $evlshortname."-tab-4", "id" => $evlshortname."-tab-4",	"type" => "open-tab");$options[] = array( "name" => __( 'Custom logo', 'evolve'  ),        "desc" => __( 'Upload a logo for your theme, or specify an image URL directly.', 'evolve'  ),        "id" => $evlshortname."_header_logo",        "type" => "upload",        "std" => "");                 $options[] = array(  "name" => __( 'Logo position', 'evolve'  ),        "desc" => __( 'Choose the position of your custom logo', 'evolve'  ),        "id" => $evlshortname."_pos_logo",        "type" => "select",        "std" => "left",        "options" => array(			  'left' => __( 'Left &nbsp;&nbsp;&nbsp;(default)', 'evolve'  ),			  'right' => __( 'Right', 'evolve'  ),        'disable' => __( 'Disable', 'evolve'  )        ));         $options[] = array(  "name" => __( 'Disable Blog Title', 'evolve'  ),        "desc" => __( 'Check this box if you don\'t want to display title of your blog', 'evolve'  ),        "id" => $evlshortname."_blog_title",        "type" => "checkbox",        "std" => "0");            $options[] = array(  "name" => __( 'Blog Tagline position', 'evolve'  ),        "desc" => __( 'Choose the position of blog tagline', 'evolve'  ),        "id" => $evlshortname."_tagline_pos",        "type" => "select",        "std" => "next",        "options" => array(			  'next' => __( 'Next to blog title &nbsp;&nbsp;&nbsp;(default)', 'evolve'  ),			  'above' => __( 'Above blog title', 'evolve'  ),        'under' => __( 'Under blog title', 'evolve'  ),        'disable' => __( 'Disable', 'evolve'  )                 ));             $options[] = array(  "name" => __( 'Disable main menu', 'evolve'  ),        "desc" => __( 'Check this box if you don\'t want to display main menu', 'evolve'  ),        "id" => $evlshortname."_main_menu",        "type" => "checkbox",        "std" => "0");         $options[] = array(  "name" => __( 'Enable sticky header', 'evolve'  ),        "desc" => __( 'Check this box if you want to display sticky header', 'evolve'  ),        "id" => $evlshortname."_sticky_header",        "type" => "checkbox",        "std" => "1");                              $options[] = array(  "name" => __( 'Enable searchbox in main menu', 'evolve'  ),        "desc" => __( 'Check this box if you want to display searchbox in main menu', 'evolve'  ),        "id" => $evlshortname."_searchbox",        "type" => "checkbox",        "std" => "1");                            $options[] = array(  "name" => __( 'Number of widget cols in header', 'evolve'  ),        "desc" => __( 'Select how many header widget areas you want to display.', 'evolve'  ),        "id" => $evlshortname."_widgets_header",        "type" => "images",        "std" => "disable",        "options" => array(			  'disable' => $imagepath . '1c.png',			  'one' => $imagepath . 'header-widgets-1.png',        'two' => $imagepath . 'header-widgets-2.png',        'three' => $imagepath . 'header-widgets-3.png',                 'four' => $imagepath . 'header-widgets-4.png',        ));            $options[] = array(		"name" => __( 'Header widgets placement', 'evolve'  ),		"desc" => __( 'Choose where to display header widgets', 'evolve'  ),		"id" => $evlshortname."_header_widgets_placement",		"std" => "home",		"type" => "select",		"options" => array(			'home' => __( 'Home page &nbsp;&nbsp;&nbsp;(default)', 'evolve'  ),			'single' => __( 'Single Post', 'evolve'  ),      'page' => __( 'Pages', 'evolve'  ),      'all' => __( 'All pages', 'evolve'  )      			)		);           $options[] = array( "name" => $evlshortname."-tab-4", "id" => $evlshortname."-tab-4",	"type" => "close-tab" ); // Footer content$options[] = array( "name" => $evlshortname."-tab-5", "id" => $evlshortname."-tab-5",	"type" => "open-tab");     $options[] = array(  "name" => __( 'Number of widget cols in footer', 'evolve'  ),        "desc" => __( 'Select how many footer widget areas you want to display.', 'evolve'  ),        "id" => $evlshortname."_widgets_num",        "type" => "images",        "std" => "disable",        "options" => array(			  'disable' => $imagepath . '1c.png',			  'one' => $imagepath . 'footer-widgets-1.png',        'two' => $imagepath . 'footer-widgets-2.png',        'three' => $imagepath . 'footer-widgets-3.png',                 'four' => $imagepath . 'footer-widgets-4.png',        )); $options[] = array(  "name" => __( 'Custom footer', 'evolve'  ),        "desc" => __( 'Available <strong>HTML</strong> tags and attributes:<br /><br /> <code> &lt;b&gt; &lt;i&gt; &lt;a href="" title=""&gt; &lt;blockquote&gt; &lt;del datetime=""&gt; <br /> &lt;ins datetime=""&gt; &lt;img src="" alt="" /&gt; &lt;ul&gt; &lt;ol&gt; &lt;li&gt; <br /> &lt;code&gt; &lt;em&gt;  &lt;strong&gt; &lt;div&gt; &lt;span&gt; &lt;h1&gt; &lt;h2&gt; &lt;h3&gt; &lt;h4&gt; &lt;h5&gt; &lt;h6&gt; <br /> &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;br /&gt; &lt;hr /&gt;</code>', 'evolve'  ),        "id" => $evlshortname."_footer_content",        "type" => "textarea",        "std" => "");$options[] = array( "name" => $evlshortname."-tab-5", "id" => $evlshortname."-tab-5",	"type" => "close-tab" ); // Typography  $options[] = array( "id" => $evlshortname."-tab-6",	"type" => "open-tab");$options[] = array(  "name" => __( 'Blog Title font', 'evolve'  ),        "desc" => __( 'Select the typography you want for your blog title. * non web-safe font.', 'evolve'  ),        "id" => $evlshortname."_title_font",        "type" => "typography",        "std" => array('size' => '39px', 'face' => 'Roboto','style' => 'bold','color' => '')        );        $options[] = array(  "name" => __( 'Blog tagline font', 'evolve'  ),        "desc" => __( 'Select the typography you want for your blog tagline. * non web-safe font.', 'evolve'  ),        "id" => $evlshortname."_tagline_font",        "type" => "typography",        "std" => array('size' => '13px', 'face' => 'Roboto','style' => 'normal','color' => '')        );          $options[] = array( "name" => __( 'Main menu font', 'evolve'  ),        "desc" => __( 'Select the typography you want for your main menu. * non web-safe font.', 'evolve'  ),        "id" => $evlshortname."_menu_font",        "type" => "typography",        "std" => array('size' => '14px', 'face' => 'Roboto','style' => 'normal','color' => '')        );                     $options[] = array( "name" => __( 'Post title font', 'evolve'  ),        "desc" => __( 'Select the typography you want for your post titles. * non web-safe font.', 'evolve'  ),        "id" => $evlshortname."_post_font",        "type" => "typography",        "std" => array('size' => '28px', 'face' => 'Roboto','style' => 'normal','color' => '')        );                         $options[] = array(  "name" => __( 'Content font', 'evolve'  ),        "desc" => __( 'Select the typography you want for your blog content. * non web-safe font.', 'evolve'  ),        "id" => $evlshortname."_content_font",        "type" => "typography",        "std" => array('size' => '16px', 'face' => 'Roboto','style' => 'normal','color' => '')        );               $options[] = array(  "name" => __( 'Headings font', 'evolve'  ),        "desc" => __( 'Select the typography you want for your blog headings (H1, H2, H3, H4, H5, H6). * non web-safe font.', 'evolve'  ),        "id" => $evlshortname."_heading_font",        "type" => "typography",        "std" => array('size' => 'none', 'face' => 'Roboto','style' => 'normal','color' => '')        );              $options[] = array( "name" => $evlshortname."-tab-6", "id" => $evlshortname."-tab-6",	"type" => "close-tab" ); // Extra Options$options[] = array( "id" => $evlshortname."-tab-7",	"type" => "open-tab");    $options[] = array(  "name" => "Enable Breadcrumbs Navigation",        "desc" => "Check this box if you want to enable breadcrumbs navigation",        "id" => $evlshortname."_breadcrumbs",        "type" => "checkbox",        "std" => "1");       $options[] = array(  "name" => __( 'Position of navigation links', 'evolve'  ),        "desc" => __( 'Choose the position of the <strong>Older/Newer Posts</strong> links', 'evolve'  ),        "id" => $evlshortname."_nav_links",        "type" => "select",        "std" => "after",        "options" => array(			  'after' => __( 'After posts &nbsp;&nbsp;&nbsp;(default)', 'evolve'  ),			  'before' => __( 'Before posts', 'evolve'  ),        'both' => __( 'Both', 'evolve'  )        ));           $options[] = array(  "name" => __( 'Position of \'Back to Top\' button', 'evolve'  ),        "desc" => "",        "id" => $evlshortname."_pos_button",        "type" => "select",        "std" => "right",        "options" => array(			  'disable' => __( 'Disable', 'evolve'  ),			  'left' => __( 'Left', 'evolve'  ),        'right' => __( 'Right &nbsp;&nbsp;&nbsp;(default)', 'evolve'  ),        'middle' => __( 'Middle', 'evolve'  )        ));          $options[] = array(  "name" => __( 'Enable Parallax Slider support', 'evolve'  ),        "desc" => __( 'Check this box if you want to enable Parallax Slider support', 'evolve'  ),        "id" => $evlshortname."_parallax_slider_support",        "type" => "checkbox",        "std" => "1");                     $options[] = array(  "name" => __( 'Enable Carousel Slider support', 'evolve'  ),        "desc" => __( 'Check this box if you want to enable Carousel Slider support', 'evolve'  ),        "id" => $evlshortname."_carousel_slider",        "type" => "checkbox",        "std" => "1");           $options[] = array(  "name" => __( 'Enable Google Map Scripts', 'evolve'  ),        "desc" => __( 'Check this box if you want to enable Google Map Scripts', 'evolve'  ),        "id" => $evlshortname."_status_gmap",        "type" => "checkbox",        "std" => "1");                   $options[] = array(  "name" => __( 'Enable Animate.css plugin support', 'evolve'  ),        "desc" => __( 'Check this box if you want to enable Animate.css plugin support - (menu hover effect, featured image hover effect, button hover effect, etc.)', 'evolve'  ),        "id" => $evlshortname."_animatecss",        "type" => "checkbox",        "std" => "1");                                       $options[] = array( "name" => $evlshortname."-tab-7", "id" => $evlshortname."-tab-7",	"type" => "close-tab" ); // General Styling$options[] = array( "name" => $evlshortname."-tab-10", "id" => $evlshortname."-tab-10",	"type" => "open-tab");    $options[] = array(  "name" => "Content color",        "desc" => "Background color of content",        "id" => $evlshortname."_content_back",        "type" => "select",        "std" => "light",        "options" => array(			    'light' => __( 'Light', 'evolve'  ),			  'dark' => __( 'Dark', 'evolve'  )        ));       $options[] = array(  "name" => "Menu color",        "desc" => "Background color of main menu",        "id" => $evlshortname."_menu_back",        "type" => "select",        "std" => "light",        "options" => array(			  'light' => __( 'Light', 'evolve'  ),			  'dark' => __( 'Dark', 'evolve'  )        ));                 $options[] = array(  "name" => "Or custom menu color",        "desc" => "Custom background color of main menu. <strong>Dark menu must be enabled.</strong>",        "id" => $evlshortname."_menu_back_color",        "type" => "color",        "std" => ""        );           $options[] = array(  "name" => "Disable Menu Background",        "desc" => "Check this box if you want to disable menu background",        "id" => $evlshortname."_disable_menu_back",        "type" => "checkbox",        "std" => "0");                $options[] = array(  "name" => "Header and Footer color",        "desc" => "Custom background color of header and footer",        "id" => $evlshortname."_header_footer_back_color",        "type" => "color",        "std" => ""        );          $options[] = array(  "name" => __( 'Header and Footer pattern', 'evolve'  ),        "desc" => __( 'Choose the pattern for header and footer background', 'evolve'  ),        "id" => $evlshortname."_pattern",        "type" => "images",        "std" => "pattern_8.png",        "options" => array(        'none' => $imagepathfolder . '/header-two/none.jpg',			  'pattern_1.png' => $imagepathfolder . '/pattern/pattern_1_thumb.png',        'pattern_2.png' => $imagepathfolder . '/pattern/pattern_2_thumb.png',        'pattern_3.png' => $imagepathfolder . '/pattern/pattern_3_thumb.png',        'pattern_4.png' => $imagepathfolder . '/pattern/pattern_4_thumb.png',        'pattern_5.png' => $imagepathfolder . '/pattern/pattern_5_thumb.png',        'pattern_6.png' => $imagepathfolder . '/pattern/pattern_6_thumb.png',        'pattern_7.png' => $imagepathfolder . '/pattern/pattern_7_thumb.png',        'pattern_8.png' => $imagepathfolder . '/pattern/pattern_8_thumb.png'        ));                    $options[] = array(  "name" => __( 'Color scheme of the slideshow and widgets area', 'evolve'  ),        "desc" => __( 'Choose the color scheme for the area below header menu', 'evolve'  ),        "id" => $evlshortname."_scheme_widgets",        "type" => "color",        "std" => "#595959"             );          $options[] = array(  "name" => __( 'Background Image of the slideshow and widgets area', 'evolve'  ),        "desc" => __( 'Upload an image for the area below header menu', 'evolve'  ),        "id" => $evlshortname."_scheme_background",        "type" => "upload",        "std" => '',             );            $options[] = array(  "name" => __( '100% Background Image', 'evolve'  ),        "desc" => "Have background image always at 100% in width and height and scale according to the browser size.",        "id" => $evlshortname."_scheme_background_100",        "type" => "checkbox",        "std" => "0");                 $options[] = array(  "name" => __( 'Background Repeat', 'evolve'  ),        "desc" => "",        "id" => $evlshortname."_scheme_background_repeat",        "type" => "select",        "std" => "no-repeat",        "options" => array(			  'repeat' => __( 'repeat', 'evolve'  ),			  'repeat-x' => __( 'repeat-x', 'evolve'  ),        'repeat-y' => __( 'repeat-y', 'evolve'  ),        'no-repeat' => __( 'no-repeat &nbsp;&nbsp;&nbsp;(default)', 'evolve'  )        ));                         $options[] = array(  "name" => __( 'General Link Color', 'evolve'  ),        "desc" => __( 'Custom color for links', 'evolve'  ),        "id" => $evlshortname."_general_link",        "type" => "color",        "std" => "#7a9cad"        );          $options[] = array(  "name" => "Buttons 1 Color",        "desc" => "Custom color for buttons: Read more, Reply",        "id" => $evlshortname."_button_1",        "type" => "color",        "std" => ""        );         $options[] = array(  "name" => "Buttons 2 Color",        "desc" => "Custom color for buttons: Post Comment, Submit",        "id" => $evlshortname."_button_2",        "type" => "color",        "std" => ""        );        $options[] = array(  "name" => "Enable Widget Title Black Background",        "desc" => "Check this box if you want to enable black background for widget titles",        "id" => $evlshortname."_widget_background",        "type" => "checkbox",        "std" => "0");           $options[] = array(  "name" => "Disable Widget Background",        "desc" => "Check this box if you want to disable widget background",        "id" => $evlshortname."_widget_background_image",        "type" => "checkbox",        "std" => "0");           $options[] = array( "name" => $evlshortname."-tab-10", "id" => $evlshortname."-tab-10",	"type" => "close-tab" );      // Custom CSS$options[] = array( "id" => $evlshortname."-tab-11",	"type" => "open-tab");$options[] = array(  "name" => "Custom CSS",        "desc" => '<strong>For advanced users only</strong>: insert custom CSS, default <a href="'.$template_url.'/style.css" target="_blank">style.css</a> file',        "id" => $evlshortname."_css_content",        "type" => "textarea",        "std" => "");               $options[] = array( "name" => $evlshortname."-tab-11", "id" => $evlshortname."-tab-11",	"type" => "close-tab" );       // Parallax Slider$options[] = array( "id" => $evlshortname."-tab-8",	"type" => "open-tab");    $options[] = array(  "name" => __( 'Parallax Slider placement', 'evolve'  ),        "desc" => __( 'Display Parallax Slider on the homepage, all pages or select the slider in the post/page edit mode.', 'evolve'  ),        "id" => $evlshortname."_parallax_slider",        "type" => "select",        "std" => "homepage",        "options" => array(			  'homepage' => __( 'Homepage only &nbsp;&nbsp;&nbsp;(default)', 'evolve'  ),			  'post' => __( 'Manually select in a Post/Page edit mode', 'evolve'  ),        'all' => __( 'All pages', 'evolve'  )        ));          $options[] = array(  "name" => "Parallax Speed",        "desc" => 'Input the time between transitions (Default: 4000);',        "id" => $evlshortname."_parallax_speed",        "type" => "text",        "std" => "4000");        $options[] = array(  "name" => __( 'Slider Title font', 'evolve'  ),        "desc" => __( 'Select the typography you want for the slide title. * non web-safe font.', 'evolve'  ),        "id" => $evlshortname."_parallax_slide_title_font",        "type" => "typography",        "std" => array('size' => '36px', 'face' => 'Roboto','style' => 'normal','color' => '')        );        $options[] = array(  "name" => __( 'Slider Description font', 'evolve'  ),        "desc" => __( 'Select the typography you want for the slide description. * non web-safe font.', 'evolve'  ),        "id" => $evlshortname."_parallax_slide_desc_font",        "type" => "typography",        "std" => array('size' => '18px', 'face' => 'Roboto','style' => 'normal','color' => '')        );                                   $options[] = array( "name" => "Enable Slide 1",						"desc" => "Check this box to enable Slide 1",						"id" => $evlshortname."_show_slide1",						"type" => "checkbox",            "std" => "1");                $options[] = array( "name" => __( 'Slide 1 Image', 'evolve'  ),        "desc" => __( 'Upload an image for the Slide 1, or specify an image URL directly.', 'evolve'  ),        "id" => $evlshortname."_slide1_img",        "type" => "upload",        "class" => "hidden",        "std" => $imagepathfolder . 'parallax/6.png');         $options[] = array(  "name" => "Slide 1 Title",        "desc" => '',        "id" => $evlshortname."_slide1_title",        "type" => "text",        "class" => "hidden",        "std" => __( 'Super Awesome WP Theme', 'evolve'  ));                  $options[] = array(  "name" => "Slide 1 Description",        "desc" => '',        "id" => $evlshortname."_slide1_desc",        "type" => "textarea",        "class" => "hidden",        "std" => __( 'Absolutely free of cost theme with amazing design and premium features which will impress your visitors', 'evolve'  ));        $options[] = array(  "name" => "Slide 1 Button",        "desc" => '',        "id" => $evlshortname."_slide1_button",        "type" => "textarea",        "class" => "hidden",        "std" => __( '<a class="da-link" href="#">Learn more</a>', 'evolve'  ));            $options[] = array( "name" => "Enable Slide 2",						"desc" => "Check this box to enable Slide 2",						"id" => $evlshortname."_show_slide2",						"type" => "checkbox",            "std" => "1");                 $options[] = array( "name" => __( 'Slide 2 Image', 'evolve'  ),        "desc" => __( 'Upload an image for the Slide 2, or specify an image URL directly.', 'evolve'  ),        "id" => $evlshortname."_slide2_img",        "type" => "upload",        "class" => "hidden",        "std" => $imagepathfolder . 'parallax/5.png');         $options[] = array(  "name" => "Slide 2 Title",        "desc" => '',        "id" => $evlshortname."_slide2_title",        "type" => "text",        "class" => "hidden",        "std" => __( 'Bootstrap and Font Awesome Ready', 'evolve'  ));                  $options[] = array(  "name" => "Slide 2 Description",        "desc" => '',        "id" => $evlshortname."_slide2_desc",        "type" => "textarea",        "class" => "hidden",        "std" => __( 'Built-in Bootstrap Elements and Font Awesome let you do amazing things with your website', 'evolve'  ));        $options[] = array(  "name" => "Slide 2 Button",        "desc" => '',        "id" => $evlshortname."_slide2_button",        "type" => "textarea",        "class" => "hidden",        "std" => __( '<a class="da-link" href="#">Learn more</a>', 'evolve'  ));           $options[] = array( "name" => "Enable Slide 3",						"desc" => "Check this box to enable Slide 3",						"id" => $evlshortname."_show_slide3",						"type" => "checkbox",            "std" => "1");                              $options[] = array( "name" => __( 'Slide 3 Image', 'evolve'  ),        "desc" => __( 'Upload an image for the Slide 3, or specify an image URL directly.', 'evolve'  ),        "id" => $evlshortname."_slide3_img",        "type" => "upload",        "class" => "hidden",        "std" => $imagepathfolder . 'parallax/4.png');         $options[] = array(  "name" => "Slide 3 Title",        "desc" => '',        "id" => $evlshortname."_slide3_title",        "type" => "text",        "class" => "hidden",        "std" => __( 'Easy to use control panel', 'evolve'  ));                  $options[] = array(  "name" => "Slide 3 Description",        "desc" => '',        "id" => $evlshortname."_slide3_desc",        "type" => "textarea",        "class" => "hidden",        "std" => __( 'Select of 500+ Google Fonts, choose layout as you need, set up your social links', 'evolve'  ));        $options[] = array(  "name" => "Slide 3 Button",        "desc" => '',        "id" => $evlshortname."_slide3_button",        "type" => "textarea",        "class" => "hidden",        "std" => __( '<a class="da-link" href="#">Learn more</a>', 'evolve'  ));           $options[] = array( "name" => "Enable Slide 4",						"desc" => "Check this box to enable Slide 4",						"id" => $evlshortname."_show_slide4",						"type" => "checkbox",            "std" => "1");                 $options[] = array( "name" => __( 'Slide 4 Image', 'evolve'  ),        "desc" => __( 'Upload an image for the Slide 4, or specify an image URL directly.', 'evolve'  ),        "id" => $evlshortname."_slide4_img",        "type" => "upload",        "class" => "hidden",        "std" => $imagepathfolder . 'parallax/1.png');         $options[] = array(  "name" => "Slide 4 Title",        "desc" => '',        "id" => $evlshortname."_slide4_title",        "type" => "text",        "class" => "hidden",        "std" => __( 'Fully responsive theme', 'evolve'  ));                  $options[] = array(  "name" => "Slide 4 Description",        "desc" => '',        "id" => $evlshortname."_slide4_desc",        "type" => "textarea",        "class" => "hidden",        "std" => __( 'Adaptive to any screen depending on the device being used to view the site', 'evolve'  ));        $options[] = array(  "name" => "Slide 4 Button",        "desc" => '',        "id" => $evlshortname."_slide4_button",        "type" => "textarea",        "class" => "hidden",        "std" => __( '<a class="da-link" href="#">Learn more</a>', 'evolve'  ));              $options[] = array( "name" => "Enable Slide 5",						"desc" => "Check this box to enable Slide 5",						"id" => $evlshortname."_show_slide5",						"type" => "checkbox",            "std" => "1");                    $options[] = array( "name" => __( 'Slide 5 Image', 'evolve'  ),        "desc" => __( 'Upload an image for the Slide 5, or specify an image URL directly.', 'evolve'  ),        "id" => $evlshortname."_slide5_img",        "type" => "upload",        "class" => "hidden",        "std" => $imagepathfolder . 'parallax/3.png');         $options[] = array(  "name" => "Slide 5 Title",        "desc" => '',        "id" => $evlshortname."_slide5_title",        "type" => "text",        "class" => "hidden",        "std" => __( 'Unlimited color schemes', 'evolve'  ));                  $options[] = array(  "name" => "Slide 5 Description",        "desc" => '',        "id" => $evlshortname."_slide5_desc",        "type" => "textarea",        "class" => "hidden",        "std" => __( 'Upload your own logo, change background color or images, select links color which you love - it\'s limitless', 'evolve'  ));        $options[] = array(  "name" => "Slide 5 Button",        "desc" => '',        "id" => $evlshortname."_slide5_button",        "type" => "textarea",        "class" => "hidden",        "std" => __( '<a class="da-link" href="#">Learn more</a>', 'evolve'  ));                                                                  $options[] = array( "name" => $evlshortname."-tab-8", "id" => $evlshortname."-tab-8",	"type" => "close-tab" );       // Posts Slider$options[] = array( "id" => $evlshortname."-tab-9",	"type" => "open-tab");  $options[] = array(  "name" => __( 'Posts Slider placement', 'evolve'  ),        "desc" => __( 'Display Posts Slider on the homepage, all pages or select the slider in the post/page edit mode.', 'evolve'  ),        "id" => $evlshortname."_posts_slider",        "type" => "select",        "std" => "post",        "options" => array(        'homepage' => __( 'Homepage only', 'evolve'  ),        'post' => __( 'Manually select in a Post/Page edit mode &nbsp;&nbsp;&nbsp;(default)', 'evolve'  ),			  'all' => __( 'All pages', 'evolve'  )        ));           $options[] = array(  "name" => __( 'Number of posts to display', 'evolve'  ),        "desc" => "",        "id" => $evlshortname."_posts_number",        "type" => "select",        "std" => "5",        "options" => array(        '1' => __( '1', 'evolve'  ),        '2' => __( '2', 'evolve'  ),        '3' => __( '3', 'evolve'  ),        '4' => __( '4', 'evolve'  ),        '5' => __( '5 &nbsp;&nbsp;&nbsp;(default)', 'evolve'  ),        '6' => __( '6', 'evolve'  ),			  '7' => __( '7', 'evolve'  ),        '8' => __( '8', 'evolve'  ),        '9' => __( '9', 'evolve'  ),        '10' => __( '10', 'evolve'  ),        ));            $options[] = array(  "name" => __( 'Slideshow content', 'evolve'  ),        "desc" => __( 'Choose to display latest posts or posts of a category.', 'evolve'  ),        "id" => $evlshortname."_posts_slider_content",        "type" => "select",        "std" => "recent",        "options" => array(        'recent' => __( 'Recent posts &nbsp;&nbsp;&nbsp;(default)', 'evolve'  ),        'category' => __( 'Posts in category', 'evolve'  )        ));           $options[] = array(  "name" => __( 'Category ID(s)', 'evolve'  ),        "desc" => __( 'Enter category ID(s) of posts separated by commas, e.g. 1,6,59,86. <strong>Posts in category</strong> option must be enabled', 'evolve'  ),        "id" => $evlshortname."_posts_slider_id",        "type" => "text",        "std" => ""         );              $options[] = array(  "name" => "Slider Speed",        "desc" => 'Input the time between transitions (Default: 3500);',        "id" => $evlshortname."_carousel_speed",        "type" => "text",        "std" => "7000");        $options[] = array(  "name" => __( 'Slider Title font', 'evolve'  ),        "desc" => __( 'Select the typography you want for the slide title. * non web-safe font.', 'evolve'  ),        "id" => $evlshortname."_carousel_slide_title_font",        "type" => "typography",        "std" => array('size' => '36px', 'face' => 'Roboto','style' => 'normal','color' => '')        );        $options[] = array(  "name" => __( 'Slider Description font', 'evolve'  ),        "desc" => __( 'Select the typography you want for the slide description. * non web-safe font.', 'evolve'  ),        "id" => $evlshortname."_carousel_slide_desc_font",        "type" => "typography",        "std" => array('size' => '18px', 'face' => 'Roboto','style' => 'normal','color' => '')        );                             $options[] = array( "name" => $evlshortname."-tab-9", "id" => $evlshortname."-tab-9",	"type" => "close-tab" );      // Back Up Options$options[] = array( "id" => $evlshortname."-tab-12",	"type" => "open-tab");  $options[] = array(  "name" => __( 'Backup Options', 'evolve'  ),        "type" => "backup",        "id" => $evlshortname."_backup"        );   $options[] = array( "name" => $evlshortname."-tab-12", "id" => $evlshortname."-tab-12",	"type" => "close-tab" );      // Contact Options$options[] = array( "id" => $evlshortname."-tab-13",	"type" => "open-tab");     $options[] = array( "name" => "Google Map Type",					"desc" => "Select the type of google map to show on the contact page.",					"id" => $evlshortname."_gmap_type",					"std" => "hybrid",					"options" => array('roadmap' => 'roadmap', 'satellite' => 'satellite', 'hybrid' => 'hybrid &nbsp;&nbsp;&nbsp;(default)', 'terrain' => 'terrain'),					"type" => "select");$options[] = array( "name" => "Google Map Width",					"desc" => "(in pixels or percentage, e.g.:100% or 100px)",					"id" => $evlshortname."_gmap_width",					"std" => "100%",					"type" => "text");$options[] = array( "name" => "Google Map Height",					"desc" => "(in pixels, e.g.: 100px)",					"id" => $evlshortname."_gmap_height",					"std" => "415px",					"type" => "text");$options[] = array( "name" => "Google Map Address",					"desc" => "Example: 775 New York Ave, Brooklyn, Kings, New York 11203.<br /> For multiple markers, separate the addresses with the | symbol. ex: Address 1|Address 2|Address 3.",					"id" => $evlshortname."_gmap_address",					"std" => "Via dei Fori Imperiali",					"type" => "text");$options[] = array( "name" => "Email Address",					"desc" => "Enter the email adress the form will be sent to.",					"id" => $evlshortname."_email_address",					"std" => "",					"type" => "text");$options[] = array( "name" => "Map Zoom Level",					"desc" => "Higher number will be more zoomed in.",					"id" => $evlshortname."_map_zoom_level",					"std" => "18",					"type" => "text");$options[] = array( "name" => "Hide Address Pin",					"desc" => "Check the box to hide the address pin.",					"id" => $evlshortname."_map_pin",					"std" => 0,					"type" => "checkbox");$options[] = array( "name" => "Show Map Popup On Click",					"desc" => "Check the box to keep the popup graphic with address info hidden when the google map loads. It will only show when the pin on the map is clicked.",					"id" => $evlshortname."_map_popup",					"std" => 0,					"type" => "checkbox");$options[] = array( "name" => "Disable Map Scrollwheel",					"desc" => "Check the box to disable scrollwheel on google maps.",					"id" => $evlshortname."_map_scrollwheel",					"std" => 0,					"type" => "checkbox");$options[] = array( "name" => "Disable Map Scale",					"desc" => "Check the box to disable scale on google maps.",					"id" => $evlshortname."_map_scale",					"std" => 0,					"type" => "checkbox");$options[] = array( "name" => "Disable Map Zoom & Pan Control Icons",					"desc" => "Check the box to disable zoom control icon and pan control icon on google maps.",					"id" => $evlshortname."_map_zoomcontrol",					"std" => 0,					"type" => "checkbox");          if (!function_exists('recaptcha_get_html')) {                    $options[] = array( "name" => "Required Captcha Plugin",					"desc" => "Please install <a href='http://wordpress.org/plugins/wp-recaptcha/'>WP-reCAPTCHA</a> plugin to enable spam protection on the contact page.",					"id" => $evlshortname."_captcha_plugin",					"std" => 0,					"type" => "info");}                    $options[] = array( "name" => "Recaptcha Public Key",					"desc" => "Follow the steps in our docs to get your key",					"id" => $evlshortname."_recaptcha_public",					"std" => "",					"type" => "text");$options[] = array( "name" => "Recaptcha Private Key",					"desc" => "Follow the steps in our docs to get your key",					"id" => $evlshortname."_recaptcha_private",					"std" => "",					"type" => "text");    $options[] = array( "name" => $evlshortname."-tab-13", "id" => $evlshortname."-tab-13",	"type" => "close-tab" );  return $options;}